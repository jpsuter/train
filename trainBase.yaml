esphome:
  name: train-base
  includes: std_includes.h

esp32:
  board: esp32dev
  framework:
    type: esp-idf

logger:

api:

ota:
  platform: esphome

#ethernet:
#  type: LAN8720
#  mdc_pin: GPIO23
#  mdio_pin: GPIO18
#  clk_mode: GPIO17_OUT
#  phy_addr: 0
wifi:
  ssid: !secret SSID
  password: !secret password
  manual_ip:
    static_ip: 10.4.200.235
    gateway: 10.4.200.254
    subnet: 255.255.255.0

i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

pca9685:
  - id: pca9685_hub1
    frequency: 500

mqtt:
  broker: 10.4.200.220
  discovery: false
  username: !secret mqtt
  password: !secret mqttpwd
  topic_prefix: train
  id: mqtt_ha
  on_json_message:
    - topic: train/rocrail/command
      then:
        - lambda: |-
            float bright;
            std::string server(x["server"]);
            std::string type(x["type"]);
            if (type == "co" && server != "mqttreader") {
              std::string lumiere(x["id"]);
              std::string cmd(x["cmd"]);
              bright=x["value"];
              switch(hash(lumiere)) {
                case "GareB"_hash:{
                    if (cmd == "on"){
                      auto call = id(GareB).turn_on();
                      call.perform();
                    }else{
                      auto call = id(GareB).turn_off();
                      call.perform();
                    }
                  }
                  break;
                case "GareH"_hash:{
                    if (cmd == "on"){
                      auto call = id(GareH).turn_on();
                      call.perform();
                    }else{
                      auto call = id(GareH).turn_off();
                      call.perform();
                    }
                  }
                  break;
                case "Eglise"_hash:{
                    if (cmd == "on"){
                      auto call = id(Eglise).turn_on();
                      call.perform();
                    }else{
                      auto call = id(Eglise).turn_off();
                      call.perform();
                    }
                  }
                  break;
                case "QuaiB"_hash:{
                    if (cmd == "on"){
                      auto call = id(QuaiB).turn_on();
                      call.perform();
                    }else{
                      auto call = id(QuaiB).turn_off();
                      call.perform();
                    }
                  }
                  break;
                case "Maison1"_hash:{
                    if (cmd == "on"){
                      auto call = id(Maison1).turn_on();
                      call.perform();
                    }else{
                      auto call = id(Maison1).turn_off();
                      call.perform();
                    }
                  }
                  break;
                }
            }
            if (type == "sys" && server != "mqttreader") {
              std::string cmd(x["cmd"]);
              if (cmd == "go")
                id(AlimRail).publish_state(true);
              else
                id(AlimRail).publish_state(false);
            }
            if (type == "auto" && server != "mqttreader") {
              std::string cmd(x["cmd"]);
              if (cmd == "on")
                id(ModeAuto).publish_state(true);
              else
                id(ModeAuto).publish_state(false);
            }


output:
  - platform: pca9685
    channel: 0
    id: pwm00
  - platform: pca9685
    channel: 1
    id: pwm01
  - platform: pca9685
    channel: 2
    id: pwm02
  - platform: pca9685
    channel: 3
    id: pwm03
  - platform: pca9685
    channel: 4
    id: pwm04
  - platform: pca9685
    channel: 5
    id: pwm05
  - platform: pca9685
    channel: 6
    id: pwm06
  - platform: pca9685
    channel: 7
    id: pwm07
  - platform: pca9685
    channel: 8
    id: pwm08
  - platform: pca9685
    channel: 9
    id: pwm09
  - platform: pca9685
    channel: 10
    id: pwm10
  - platform: pca9685
    channel: 11
    id: pwm11
  - platform: pca9685
    channel: 12
    id: pwm12
  - platform: pca9685
    channel: 13
    id: pwm13
  - platform: pca9685
    channel: 14
    id: pwm14
  - platform: pca9685
    channel: 15
    id: pwm15

switch:
  - platform: template
    id: AlimRail
    name: "Alimentation rails"
    icon: mdi:fence-electric
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<sys cmd="go"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<sys cmd="stop"/>'
  - platform: template
    id: ModeAuto
    name: "Automatique"
    icon: mdi:refresh-auto
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<auto cmd="on"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<auto cmd="off"/>'


light:
  - platform: monochromatic
    name: 'GareB'
    id: GareB
    output: pwm00
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="GareB" cmd="on"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="GareB" cmd="off"/>'

  - platform: monochromatic
    name: 'GareH'
    id: GareH
    output: pwm01
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="GareH" cmd="on"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="GareH" cmd="off"/>'

  - platform: monochromatic
    name: 'Eglise'
    id: Eglise
    output: pwm02
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="Eglise" cmd="on"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="Eglise" cmd="off"/>'

  - platform: monochromatic
    name: 'QuaiB'
    id: QuaiB
    output: pwm03
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="QuaiB" cmd="on"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="QuaiB" cmd="off"/>'

  - platform: monochromatic
    name: 'Maison1'
    id: Maison1
    output: pwm04
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="Maison1" cmd="on"/>'
    on_turn_off:
      then:
        - mqtt.publish:
            topic: rocrail/service/client
            payload: '<co id="Maison1" cmd="off"/>'

